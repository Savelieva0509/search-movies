{"version":3,"file":"static/js/785.d020efb1.chunk.js","mappings":"gQACMA,EAAG,mCAEIC,EAAc,WAKzB,OAJiBC,EAAAA,EAAAA,IAAA,gEAC0CF,GAI5D,EACYG,EAAc,SAAAC,GAIzB,OAHiBF,EAAAA,EAAAA,IAAA,4DACsCF,EADtC,kBACmDI,EADnD,WAIlB,EACYC,EAAe,SAAAC,GAI1B,OAHiBJ,EAAAA,EAAAA,IAAA,6CACuBI,EADvB,oBACqCN,EADrC,mBAIlB,EACYO,EAAY,SAAAD,GAIvB,OAHiBJ,EAAAA,EAAAA,IAAA,6CACuBI,EADvB,4BAC6CN,EAD7C,mBAIlB,EACYQ,EAAe,SAAAF,GAI1B,OAHiBJ,EAAAA,EAAAA,IAAA,6CACuBI,EADvB,4BAC6CN,EAD7C,0BAIlB,C,uFCeD,UA3CgB,WACd,OAA8BS,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAmBL,EAAAA,EAAAA,UAAS,MAArBO,GAAP,eAgBA,IAdAC,EAAAA,EAAAA,YAAU,WACR,IACEJ,GAAa,IACbL,EAAAA,EAAAA,IAAaM,GACVI,SAAQ,kBAAML,GAAa,EAAnB,IACRM,MAAK,SAAAC,GACJT,EAAWS,EAASC,KAAKC,QAC1B,GAIJ,CAHC,MAAOC,GACPP,EAASO,GACTV,GAAa,EACd,CACF,GAAE,CAACG,EAAUF,IAETJ,EAIL,OACE,gCACGE,IAAa,SAAC,IAAD,IACbF,EAAQc,OAAS,GAChB,wBACGd,EAAQe,KAAI,gBAAGnB,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,mCAAWD,MACX,6BAAKC,OAFErB,EADE,OAQf,sEAIP,C","sources":["API.js","components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\nconst KEY = `946436ca4073577028dd0f99867a7b5f`;\n\nexport const getTrending = () => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n  );\n\n  return response;\n};\nexport const searchMovie = query => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&page=1`\n  );\n  return response;\n};\nexport const movieDetails = id => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response;\n};\nexport const movieCast = id => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response;\n};\nexport const movieReviews = id => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response;\n};\n","import Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { movieReviews } from '../../API';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const [setError] = useState(null);\n\n  useEffect(() => {\n    try {\n      setIsLoading(true);\n      movieReviews(movieId)\n        .finally(() => setIsLoading(false))\n        .then(response => {\n          setReviews(response.data.results);\n        });\n    } catch (error) {\n      setError(error);\n      setIsLoading(false);\n    }\n  }, [setError, movieId]);\n\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <p>Author:{author}</p>\n              <p> {content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["KEY","getTrending","axios","searchMovie","query","movieDetails","id","movieCast","movieReviews","useState","reviews","setReviews","isLoading","setIsLoading","movieId","useParams","setError","useEffect","finally","then","response","data","results","error","length","map","author","content"],"sourceRoot":""}