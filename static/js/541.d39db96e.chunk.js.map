{"version":3,"file":"static/js/541.d39db96e.chunk.js","mappings":"gQACMA,EAAG,mCAEIC,EAAc,WAKzB,OAJiBC,EAAAA,EAAAA,IAAA,gEAC0CF,GAI5D,EACYG,EAAc,SAAAC,GAIzB,OAHiBF,EAAAA,EAAAA,IAAA,4DACsCF,EADtC,kBACmDI,EADnD,WAIlB,EACYC,EAAe,SAAAC,GAI1B,OAHiBJ,EAAAA,EAAAA,IAAA,6CACuBI,EADvB,oBACqCN,EADrC,mBAIlB,EACYO,EAAY,SAAAD,GAIvB,OAHiBJ,EAAAA,EAAAA,IAAA,6CACuBI,EADvB,4BAC6CN,EAD7C,mBAIlB,EACYQ,EAAe,SAAAF,GAI1B,OAHiBJ,EAAAA,EAAAA,IAAA,6CACuBI,EADvB,4BAC6CN,EAD7C,0BAIlB,C,+FC0BD,UArDa,WACX,OAAwBS,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAmBL,EAAAA,EAAAA,UAAS,MAArBO,GAAP,eAgBA,IAdAC,EAAAA,EAAAA,YAAU,WACR,IACEJ,GAAa,IACbN,EAAAA,EAAAA,IAAUO,GACPI,SAAQ,kBAAML,GAAa,EAAnB,IACRM,MAAK,SAAAC,GACJT,EAAQS,EAASC,KAAKX,KACvB,GAIJ,CAHC,MAAOY,GACPN,EAASM,GACTT,GAAa,EACd,CACF,GAAE,CAACG,EAAUF,IAETJ,EAGL,OACE,gCACGE,IAAa,SAAC,IAAD,IACbF,EAAKa,OAAS,GACb,wBACGb,EAAKc,KAAI,YAAqD,IAAlDlB,EAAiD,EAAjDA,GAAImB,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAC5C,OACE,2BACE,gBACEC,MAAO,IACPC,OAAQ,IACRC,IACEJ,EAAY,0CAC2BA,GACnCK,EAENC,IAAKP,KAEP,uBAAIA,KACJ,uCAAeE,OAZRrB,EAeZ,OAGH,sEAIP,C","sources":["API.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\nconst KEY = `946436ca4073577028dd0f99867a7b5f`;\n\nexport const getTrending = () => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n  );\n\n  return response;\n};\nexport const searchMovie = query => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&page=1`\n  );\n  return response;\n};\nexport const movieDetails = id => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response;\n};\nexport const movieCast = id => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response;\n};\nexport const movieReviews = id => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response;\n};\n","import Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { movieCast } from '../../API';\nimport img from 'components/default.png';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const [setError] = useState(null);\n\n  useEffect(() => {\n    try {\n      setIsLoading(true);\n      movieCast(movieId)\n        .finally(() => setIsLoading(false))\n        .then(response => {\n          setCast(response.data.cast);\n        });\n    } catch (error) {\n      setError(error);\n      setIsLoading(false);\n    }\n  }, [setError, movieId]);\n\n  if (!cast) {\n    return;\n  }\n  return (\n    <>\n      {isLoading && <Loader />}\n      {cast.length > 0 ? (\n        <ul>\n          {cast.map(({ id, original_name, profile_path, character }) => {\n            return (\n              <li key={id}>\n                <img\n                  width={200}\n                  height={300}\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                      : img\n                  }\n                  alt={original_name}\n                />\n                <p>{original_name}</p>\n                <p>Character: {character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don`t have any information about cast</p>\n      )}\n    </>\n  );\n};\nexport default Cast;\n"],"names":["KEY","getTrending","axios","searchMovie","query","movieDetails","id","movieCast","movieReviews","useState","cast","setCast","isLoading","setIsLoading","movieId","useParams","setError","useEffect","finally","then","response","data","error","length","map","original_name","profile_path","character","width","height","src","img","alt"],"sourceRoot":""}